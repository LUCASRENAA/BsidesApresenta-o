name: Analyze PR Diff with TinyLlama

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  contents: read

jobs:
  security-review:
    name: Revisar mudan√ßas do PR com TinyLlama
    runs-on: ubuntu-latest

    steps:
      - name: Checkout reposit√≥rio
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # necess√°rio para comparar as mudan√ßas

      - name: Remover vers√µes conflitantes do Docker
        run: |
          sudo apt-get remove --purge containerd containerd.io || true
          sudo apt-get update

      - name: Instalar Docker e Docker Compose
        run: |
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          sudo sh -c "echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable' > /etc/apt/sources.list.d/docker.list"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Configurar Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image (caso necess√°rio)
        run: |
          docker-compose -f docker-compose.yml build

      - name: Iniciar Containers
        run: |
          docker-compose -f docker-compose.yml up -d
          sudo docker exec ollama ollama pull tinyllama

      - name: Obter o diff do PR
        id: diff
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff origin/${{ github.base_ref }} > pr.diff
          echo "Diff obtido:"
          cat pr.diff

      - name: Esperar TinyLlama subir
        run: |
          echo "‚è≥ Aguardando TinyLlama iniciar..."
          for i in {1..30}; do
            if curl -s http://localhost:11434 > /dev/null; then
              echo "‚úÖ TinyLlama est√° pronto."
              break
            fi
            sleep 1
          done

      - name: Analisar mudan√ßas com TinyLlama
        id: analysis
        run: |
          # Ler o conte√∫do do diff e format√°-lo como string
          echo "üîç Exibindo conte√∫do do PR Diff:"
          cat pr.diff  # Exibe o conte√∫do do diff para diagn√≥stico

          # Escapar as quebras de linha e as aspas duplas para garantir que seja uma string v√°lida em JSON
          patch=$(cat pr.diff | jq -Rs .)  # Usa o `jq -Rs` para tratar o diff como string, escapando quebras de linha e aspas
          
          echo "üîç Diff formatado como string (escapando quebras de linha e aspas):"
          echo "$patch"  # Exibe o patch formatado para diagn√≥stico

          # Criar o prompt para o TinyLlama
          prompt=$(jq -n --arg txt "Analyze the following code diff as a security analyst. Identify any potential security issues or bad practices, and suggest improvements:\n" --arg diff "$patch" '$txt + $diff')
          
          echo "üîç Prompt gerado para o TinyLlama:"
          echo "$prompt"  # Exibe o prompt para garantir que est√° correto

          # Enviar para an√°lise
          echo "üì§ Enviando para a API do TinyLlama..."
          response=$(curl -s -X POST http://localhost:11399/api/generate \
            -H "Content-Type: application/json" \
            -d "{\"model\": \"tinyllama\", \"stream\": false, \"prompt\": $prompt}")

          echo "üì• Resposta da API:"
          echo "$response" | jq  # Exibe a resposta da API

          # Obter o resumo da resposta ou erro
          summary=$(echo "$response" | jq -r '.response // .error')
          echo "üîë Resumo da an√°lise:"
          echo "$summary"

          # Passar o resumo para o GitHub output
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$summary" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT


      - name: Comentar no PR
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMENT_BODY="### ü§ñ TinyLlama Security Review\n\n${{ steps.analysis.outputs.summary }}"
          
          curl -s -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$COMMENT_BODY\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
