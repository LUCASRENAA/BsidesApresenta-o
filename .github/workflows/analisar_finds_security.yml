name: Analyze GitHub Security Findings

on:
  push:
    branches:
      - main
      - Dev
  pull_request:
    branches:
      - main
      - Dev

permissions:
  contents: read
  security-events: read

jobs:
  analyze-findings:
    name: Analisar Findings de Seguran√ßa com TinyLlama
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Remover vers√µes conflitantes do Docker
        run: |
          sudo apt-get remove --purge containerd containerd.io || true
          sudo apt-get update

      - name: Instalar Docker e Docker Compose
        run: |
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          sudo sh -c "echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable' > /etc/apt/sources.list.d/docker.list"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Configurar Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image (caso necess√°rio)
        run: |
          docker-compose -f docker-compose.yml build

      - name: Iniciar Containers
        run: |
          docker-compose -f docker-compose.yml up -d
          sudo docker exec ollama ollama pull tinyllama

      - name: Baixar findings de seguran√ßa
        run: |
          mkdir -p findings

          echo "üîç Baixando Code Scanning..."
          curl -s -H "Authorization: token ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/code-scanning/alerts \
            -o findings/code-scanning.json

          echo "Exibindo findings do Code Scanning..."
          cat findings/code-scanning.json

          echo "üîê Baixando Secret Scanning..."
          curl -s -H "Authorization: token ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/secret-scanning/alerts \
            -o findings/secrets.json || echo "Erro ao baixar Secret Scanning"

          echo "Exibindo findings do Secret Scanning..."
          cat findings/secrets.json

          echo "üì¶ Baixando Dependabot..."
          curl -s -H "Authorization: token ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/dependabot/alerts \
            -o findings/dependabot.json || echo "Erro ao baixar Dependabot"

          echo "Exibindo findings do Dependabot..."
          cat findings/dependabot.json

      - name: Analisar cada finding com TinyLlama
        run: |
            analyze_findings() {
              local type="$1"
              local file="findings/${type}.json"

              echo "üîé Analisando findings de ${type}..."
              count=$(jq length "$file")

              if [ "$count" -eq 0 ]; then
                echo "‚úÖ Nenhum finding de ${type} encontrado."
                return
              fi

              for i in $(seq 0 $(($count - 1))); do
                finding=$(jq -c ".[$i]" "$file")
                prompt=$(jq -Rn --arg data "$finding" --arg type "$type" \
                  '$type + " finding: " + $data')

                echo "üì§ Enviando para an√°lise..."
                response=$(curl -s -X POST http://localhost:11434/api/generate \
                  -H "Content-Type: application/json" \
                  -d "{\"model\": \"tinyllama\", \"stream\": false, \"prompt\": $prompt}")

                # Verificar se a resposta tem o campo 'response'
                result=$(echo "$response" | jq -r '.response // .error')

                if [ "$result" == "null" ]; then
                  echo "‚ö†Ô∏è Erro na resposta da IA (Finding $i): $response"
                else
                  echo "üß† Resultado da IA (Finding $i): $result"
                fi
                echo "---"
              done
            }

            analyze_findings "code-scanning"
            analyze_findings "secrets"
            analyze_findings "dependabot"

      - name: Parar ambiente TinyLlama
        run: |
            docker stop ollama && docker rm ollama
